#version: '3.8'
#
#services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8096:8096"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/kaddemdb?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: "root"
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#      SPRING_JPA_SHOW_SQL: "true"
#      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
#    depends_on:
#      - mysql
#    networks:
#      - mynetwork
#
#  mysql:
#    image: mysql:latest
#    container_name: mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: kaddemdb
#      MYSQL_USER: user
#      MYSQL_PASSWORD: user
#    ports:
#      - "3307:3306"
#    restart: on-failure
#    volumes:
#      - db_data:/var/lib/mysql
#    networks:
#      - mynetwork
#
#
#networks:
#  mynetwork:
#
#volumes:
#  db_data:
#  grafana_data:

version: '3.8'

services:
  db:
    image: mysql:latest
    container_name: kaddem_mysql
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "192.168.50.4"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MYSQL_DATABASE: kaddemdb # Creates the 'kaddem' database on startup
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - kaddem-network

  app:
    build:
      context: .  # Root project directory
      dockerfile: Dockerfile  # Path to your Dockerfile
    container_name: kaddem_backend
    ports:
      - "8096:8096"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://kaddem_mysql:3306/kaddemdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SERVER_PORT: 8096

    volumes:
      - ./src/main/resources/application.properties:/app/src/main/resources/application.properties
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kaddem-network

volumes:
  db_data:

networks:
  kaddem-network: